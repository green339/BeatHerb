plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.1'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'store.beatherb'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
	modularity.inferModulePath = true
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-redis', version: '3.2.0'
	implementation 'javax.xml.bind:jaxb-api:2.4.0-b180830.0359'
	implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.3'
	implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// https://mvnrepository.com/artifact/com.querydsl/querydsl-jpa
	implementation 'com.querydsl:querydsl-jpa:5.0.0'
	// https://mvnrepository.com/artifact/com.querydsl/querydsl-apt
	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0'
	// https://mvnrepository.com/artifact/jakarta.annotation/jakarta.annotation-api
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
	// https://mvnrepository.com/artifact/jakarta.persistence/jakarta.persistence-api
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'





	testCompileOnly 'org.projectlombok:lombok' // 테스트 의존성 추가
	testAnnotationProcessor 'org.projectlombok:lombok' // 테스트 의존성 추가


}

def querydslSrcDir = 'src/main/generated'
clean {
	delete file(querydslSrcDir)
}
tasks.named('test') {
	useJUnitPlatform()
}
tasks.withType(JavaCompile).configureEach {
	options.generatedSourceOutputDirectory = file(querydslSrcDir)
}